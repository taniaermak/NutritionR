else {
print("Invalid")
}
#
fatcal <- (food$Protein*4*amount)
carbcal <- (food$Carbs*4*amount)
protcal <-(food$Fats*9*amount)
#
result <- paste("Your calorie count: ", fatcal+carbcal+protcal)
return(result)
}
calcount("watermellon",10,"grams")
source('~/Desktop/Data Science Data/NutritionR/R/calcount.R', echo=TRUE)
calcount("watermellon",40,"oz")
calcount("melon",twenty,"grams")
calcount("chiken",twenty,"grams")
calcount("chicken",twenty,"grams")
source('~/Desktop/Data Science Data/NutritionR/R/calcount.R', echo=TRUE)
calcount("chicken",twenty,"grams")
source('~/Desktop/Data Science Data/NutritionR/R/calcount.R', echo=TRUE)
source('~/Desktop/Data Science Data/NutritionR/R/calcount.R', echo=TRUE)
calcount("chicken",twenty,"grams")
source('~/Desktop/Data Science Data/NutritionR/R/calcount.R', echo=TRUE)
calcount("chicken",twenty,"grams")
source('~/Desktop/Data Science Data/NutritionR/R/calcount.R', echo=TRUE)
calcount("chicken",twenty,"grams")
source('~/Desktop/Data Science Data/NutritionR/R/calcount.R', echo=TRUE)
calcount("chicken",twenty,"grams")
is.numeric(amount)
source('~/Desktop/Data Science Data/NutritionR/R/calcount.R', echo=TRUE)
is.numeric(amount)
is.numeric(20)
is.numeric(twenty)
is.numeric("twenty")
source('~/Desktop/Data Science Data/NutritionR/R/calcount.R', echo=TRUE)
source('~/Desktop/Data Science Data/NutritionR/R/calcount.R', echo=TRUE)
calcount("chicken","twenty","grams")
calcount("chicken",1,"grams")
devtools::test()
test_that("amount", {
expr_is_a(numeric)
})
test_that("amount", {
expr_is_a('numeric')
})
source('~/Desktop/Data Science Data/NutritionR/tests/testthat/test_calcount.R', echo=TRUE)
source('~/Desktop/Data Science Data/NutritionR/R/calcount.R', echo=TRUE)
source('~/Desktop/Data Science Data/NutritionR/tests/testthat/test_calcount.R', echo=TRUE)
library(readr)
library(readr)
devtools::document()
library(readr)
setwd("~/Desktop/Data Science Data/NutritionR")
food <- read_csv("R Package Data - Food1.csv")
library(NutritionR)
source('~/Desktop/Data Science Data/NutritionR/R/calcount.R', echo=TRUE)
calcount("chicken",100,"grams")
calcount("broccoli",100,"grams")
source('~/Desktop/Data Science Data/NutritionR/R/calcount.R', echo=TRUE)
calcount("chicken",100,"grams")
library(NutritionR)
calcount("chicken",100,"grams")
library(NutritionR)
calcount("chicken",100,"grams")
View(food)
calcount("Chicken",100,"grams")
source('~/Desktop/Data Science Data/NutritionR/R/calcount.R', echo=TRUE)
calcount("Chicken",100,"grams")
calcount("Chicken",100,"grams")
source('~/Desktop/Data Science Data/NutritionR/R/calcount.R', echo=TRUE)
calcount("Chicken",100,"grams")
source('~/Desktop/Data Science Data/NutritionR/R/calcount.R', echo=TRUE)
calcount("Chicken",100,"grams")
source('~/Desktop/Data Science Data/NutritionR/R/calcount.R', echo=TRUE)
calcount("Chicken",100,"grams")
source('~/Desktop/Data Science Data/NutritionR/R/calcount.R', echo=TRUE)
calcount("Chicken",100,"grams")
calcount("chicken",100,"grams")
food <- read_csv("R Package Data - Food1.csv")
head(food)
calcount <- function(name, amount, unit = "grams") {
name = tolower(name)
unit = tolower(unit)
food = food[food$Name == name,]
#    check <- name == food$Name
#   if (!any(check)) stop("Unfortunately, your food item isn't in our database :(", call. = FALSE)
#   print(any(check))
if(unit == "grams") {
amount <- amount * 1
}
else if(unit == "cups" || unit == "cup"){
amount <- amount * 128
}
else if(unit == "ounces" || unit == "oz" || unit == "ounce"){
amount <- amount * 23
}
else if(unit == "pounds" || unit == "lbs" || unit == "lb" || unit == "pound"){
amount <- amount * 435
}
else {
print("Invalid")
}
#
fatcal <- (food$Protein*4*amount)
carbcal <- (food$Carbs*4*amount)
protcal <-(food$Fats*9*amount)
#
result <- paste("Your calorie count: ", fatcal+carbcal+protcal)
return(result)
}
calcount("chicken",100,"grams")
source('~/Desktop/Data Science Data/NutritionR/R/calcount.R', echo=TRUE)
calcount("chicken",100,"grams")
food <- read_csv("R Package Data - Food1.csv")
calcount <- function(name, amount, unit = "grams") {
name = tolower(name)
unit = tolower(unit)
food = food[food$Name == name,]
check <- name == food$Name
if (!any(check)) stop("Unfortunately, your food item isn't in our database :(", call. = FALSE)
print(any(check))
if(unit == "grams") {
amount <- amount * 1
}
else if(unit == "cups" || unit == "cup"){
amount <- amount * 128
}
else if(unit == "ounces" || unit == "oz" || unit == "ounce"){
amount <- amount * 23
}
else if(unit == "pounds" || unit == "lbs" || unit == "lb" || unit == "pound"){
amount <- amount * 435
}
else {
print("Invalid")
}
#
fatcal <- (food$Protein*4*amount)
carbcal <- (food$Carbs*4*amount)
protcal <-(food$Fats*9*amount)
#
result <- paste("Your calorie count: ", fatcal+carbcal+protcal)
return(result)
}
calcount("chicken",100,"grams")
calcount <- function(name, amount, unit = "grams") {
name = tolower(name)
unit = tolower(unit)
food = food[food$Name == name,]
#   check <- name == food$Name
#   if (!any(check)) stop("Unfortunately, your food item isn't in our database :(", call. = FALSE)
#   print(any(check))
if(unit == "grams") {
amount <- amount * 1
}
else if(unit == "cups" || unit == "cup"){
amount <- amount * 128
}
else if(unit == "ounces" || unit == "oz" || unit == "ounce"){
amount <- amount * 23
}
else if(unit == "pounds" || unit == "lbs" || unit == "lb" || unit == "pound"){
amount <- amount * 435
}
else {
print("Invalid")
}
#
fatcal <- (food$Protein*4*amount)
carbcal <- (food$Carbs*4*amount)
protcal <-(food$Fats*9*amount)
#
result <- paste("Your calorie count: ", fatcal+carbcal+protcal)
return(result)
}
calcount("chicken",100,"grams")
calcount("broccoli",100,"grams")
calcount("broccoli",100,"oz")
result <- paste("Your calorie count: ", fatcal+carbcal+protcal)
return(result)
result <- paste("Your calorie count: ", fatcal+carbcal+protcal)
calcount <- function(name, amount, unit = "grams") {
name = tolower(name)
unit = tolower(unit)
food = food[food$Name == name,]
#   check <- name == food$Name
#   if (!any(check)) stop("Unfortunately, your food item isn't in our database :(", call. = FALSE)
#   print(any(check))
if(unit == "grams") {
amount <- amount * 1
}
else if(unit == "cups" || unit == "cup"){
amount <- amount * 128
}
else if(unit == "ounces" || unit == "oz" || unit == "ounce"){
amount <- amount * 23
}
else if(unit == "pounds" || unit == "lbs" || unit == "lb" || unit == "pound"){
amount <- amount * 435
}
else {
print("Invalid")
}
#
fatcal <- (food$Protein*4*amount)
carbcal <- (food$Carbs*4*amount)
protcal <-(food$Fats*9*amount)
#
result <- paste("Your calorie count: ", fatcal+carbcal+protcal)
return(result)
}
result <- paste("Your calorie count: ", fatcal+carbcal+protcal)
calcount("broccoli",100,"grams")
food <- read_csv("R Package Data - Food1.csv")
calcount <- function(name, amount, unit) {
name = tolower(name)
unit = tolower(unit)
food = food[food$Name == name,]
check <- name == food$Name
if (!any(check)) stop("Unfortunately, your food item isn't in our database :(", call. = FALSE)
print(any(check))
if(unit == "grams") {
amount <- amount * 1
}
else if(unit == "cups" || unit == "cup"){
amount <- amount * 128
}
else if(unit == "ounces" || unit == "oz" || unit == "ounce"){
amount <- amount * 23
}
else if(unit == "pounds" || unit == "lbs" || unit == "lb" || unit == "pound"){
amount <- amount * 435
}
else {
print("Invalid")
}
#
fatcal <- (food$Protein*4*amount)
carbcal <- (food$Carbs*4*amount)
protcal <-(food$Fats*9*amount)
#
result <- paste("Your calorie count: ", fatcal+carbcal+protcal)
return(result)
}
food <- read_csv("R Package Data - Food1.csv")
calcount <- function(name, amount, unit) {
name = tolower(name)
unit = tolower(unit)
food = food[food$Name == name,]
check <- name == food$Name
if (!any(check)) stop("Unfortunately, your food item isn't in our database :(", call. = FALSE)
print(any(check))
if(unit == "grams") {
amount <- amount * 1
}
else if(unit == "cups" || unit == "cup"){
amount <- amount * 128
}
else if(unit == "ounces" || unit == "oz" || unit == "ounce"){
amount <- amount * 23
}
else if(unit == "pounds" || unit == "lbs" || unit == "lb" || unit == "pound"){
amount <- amount * 435
}
else {
print("Invalid")
}
#
fatcal <- (food$Protein*4*amount)
carbcal <- (food$Carbs*4*amount)
protcal <-(food$Fats*9*amount)
#
result <- paste("Your calorie count: ", fatcal+carbcal+protcal)
return(result)
}
calcount("chicken",100,"grams")
source('~/.active-rstudio-document', echo=TRUE)
calcount("chicken",100,"grams")
source('~/Desktop/Data Science Data/NutritionR/R/calcount.R', echo=TRUE)
calcount("chicken",100,"grams")
source('~/Desktop/Data Science Data/NutritionR/R/calcount.R', echo=TRUE)
calcount("chicken",100,"grams")
# CREATE PACKAGE FUNCTIONS --------------------------------------------------------------------------------------------
#recipes and sample data, package should install
# 1. Create a calcount.R script in the R/ folder with the following contents.
# 2. Copy the script below.
#' Calculate the number of calories of a food item based on protein, carb, and fat data
#'
#' @param name Name of the food item
#' @param amount Number of servings
#' @param unit Unit of measure
#' @return The number of calories consumed given the food type as well as protein, carb, and fat information
#food <- read_csv("R Package Data - Food1.csv")
calcount <- function(name, amount, unit) {
name = tolower(name)
unit = tolower(unit)
food = food[food$Name == name,]
if(unit == "grams") {
amount <- amount * 1
}
else if(unit == "cups" || unit == "cup"){
amount <- amount * 128
}
else if(unit == "ounces" || unit == "oz" || unit == "ounce"){
amount <- amount * 23
}
else if(unit == "pounds" || unit == "lbs" || unit == "lb" || unit == "pound"){
amount <- amount * 435
}
else {
print("Invalid")
}
#
fatcal <- (food$Protein*4*amount)
carbcal <- (food$Carbs*4*amount)
protcal <-(food$Fats*9*amount)
#
result <- paste("Your calorie count: ", fatcal+carbcal+protcal)
return(result)
}
#
# calcount <- function(name, amount, unit = "grams") {
#   name = tolower(name)
#   unit = tolower(unit)
#   food = food[food$Name == name,]
#
# #   check <- name == food$Name
# #   if (!any(check)) stop("Unfortunately, your food item isn't in our database :(", call. = FALSE)
# #   print(any(check))
#
#   if(unit == "grams") {
#     amount <- amount * 1
#   }
#
#   else if(unit == "cups" || unit == "cup"){
#     amount <- amount * 128
#   }
#
#   else if(unit == "ounces" || unit == "oz" || unit == "ounce"){
#     amount <- amount * 23
#
#  }
#
# else if(unit == "pounds" || unit == "lbs" || unit == "lb" || unit == "pound"){
#   amount <- amount * 435
#
# }
#
# else {
#
#   print("Invalid")
#
#   }
#   #
#   fatcal <- (food$Protein*4*amount)
#   carbcal <- (food$Carbs*4*amount)
#   protcal <-(food$Fats*9*amount)
#   #
#
#   result <- paste("Your calorie count: ", fatcal+carbcal+protcal)
#   return(result)
# }
#
#
#
#
calcount("chicken",100,"grams")
library(readr)
source('~/.active-rstudio-document', echo=TRUE)
calcount("chicken",10,"grams")
library(food)
View(food)
calcount <- function(name, amount, unit) {
name = tolower(name)
unit = tolower(unit)
food = food[food$Name == name,]
if(unit == "grams") {
amount <- amount * 1
}
else if(unit == "cups" || unit == "cup"){
amount <- amount * 128
}
else if(unit == "ounces" || unit == "oz" || unit == "ounce"){
amount <- amount * 23
}
else if(unit == "pounds" || unit == "lbs" || unit == "lb" || unit == "pound"){
amount <- amount * 435
}
else {
print("Invalid")
}
#
fatcal <- (food$Protein*4*amount)
carbcal <- (food$Carbs*4*amount)
protcal <-(food$Fats*9*amount)
#
result <- paste("Your calorie count: ", fatcal+carbcal+protcal)
return(result)
}
calcount("chicken",10,"grams")
source('~/.active-rstudio-document', echo=TRUE)
calcount("chicken")
source('~/.active-rstudio-document', echo=TRUE)
calcount("chicken",10)
source('~/.active-rstudio-document', echo=TRUE)
calcount("chicken",10)
calcount <- function(name, amount) {
name = tolower(name)
food = food[food$Name == name,]
fatcal <- (food$Protein*4*amount)
carbcal <- (food$Carbs*4*amount)
protcal <-(food$Fats*9*amount)
#
result <- paste("Your calorie count: ", fatcal+carbcal+protcal)
return(result)
}
calcount("chicken",10)
view(food)
food
food$Name == "Chicken"
[food$Name == "Chicken",]
source('~/Desktop/Data Science Data/NutritionR/R/calcount.R', echo=TRUE)
calcount("chicken",10,"grams")
library(NutritionR)
calcount("chicken",10,"grams")
food
setwd("~/Desktop/Data Science Data/NutritionR/R")
library(NutritionR)
calcount("chicken",10,"grams")
library(NutritionR)
calcount("chicken",10,"grams")
library(NutritionR)
calcount("chicken",10,"grams")
library(NutritionR)
calcount("chicken",10,"grams")
source('~/Desktop/Data Science Data/NutritionR/R/calcount.R', echo=TRUE)
library(NutritionR)
calcount("chicken",10,"grams")
getwd()
library(NutritionR)
calcount("chicken",10,"grams")
devtools::load_all("~/Desktop/Data Science Data/NutritionR")
library(NutritionR)
library(NutritionR)
calcount2("chicken",10,"grams")
source('~/Desktop/Data Science Data/NutritionR/R/calcount2.R', echo=TRUE)
calcount2("chicken",10,"grams")
calcount2("chicken",10,"grams")
source('~/Desktop/Data Science Data/NutritionR/R/calcount2.R', echo=TRUE)
calcount2("chicken",10,"grams")
source('~/Desktop/Data Science Data/NutritionR/R/calcount2.R', echo=TRUE)
calcount2("chicken",10,"grams")
tolower(food$Name)
calcount2 <- function(name, amount, unit,file="R Package Data - Food1.csv") {
food <- read_csv(file)
print(food)
name = tolower(food$Name)
unit = tolower(unit)
food = food[food$Name == name,]
if(unit == "grams") {
amount <- amount * 1
}
else if(unit == "cups" || unit == "cup"){
amount <- amount * 128
}
else if(unit == "ounces" || unit == "oz" || unit == "ounce"){
amount <- amount * 23
}
else if(unit == "pounds" || unit == "lbs" || unit == "lb" || unit == "pound"){
amount <- amount * 435
}
else {
print("Invalid")
}
fatcal <- (food$Protein*4*amount)
carbcal <- (food$Carbs*4*amount)
protcal <-(food$Fats*9*amount)
result <- paste("Your calorie count:", fatcal+carbcal+protcal)
return(result)
}
calcount2("chicken",10,"grams")
source('~/Desktop/Data Science Data/NutritionR/R/calcount2.R', echo=TRUE)
calcount2("chicken",10,"grams")
source('~/Desktop/Data Science Data/NutritionR/R/calcount2.R', echo=TRUE)
calcount2("chicken",10,"grams")
source('~/Desktop/Data Science Data/NutritionR/R/calcount2.R', echo=TRUE)
calcount2("chicken",10,"grams")
source('~/Desktop/Data Science Data/NutritionR/R/calcount2.R', echo=TRUE)
check <- food[food$Name == name,]
calcount2("chicken",10,"grams")
source('~/Desktop/Data Science Data/NutritionR/R/calcount2.R', echo=TRUE)
calcount2("chicken",10,"grams")
calcount2("water",10,"grams")
source('~/Desktop/Data Science Data/NutritionR/R/calcount2.R', echo=TRUE)
calcount2("broccoli",10,"grams")
calcount2("chicken",10,"grams")
calcount2("pork",10,"grams")
food
source('~/Desktop/Data Science Data/NutritionR/R/calcount2.R', echo=TRUE)
calcount2("broccoli",10,"grams")
source('~/Desktop/Data Science Data/NutritionR/R/calcount2.R', echo=TRUE)
print(any(check))
#print(any(check))
source('~/Desktop/Data Science Data/NutritionR/R/calcount2.R', echo=TRUE)
calcount2("broccoli",10,"grams")
source('~/Desktop/Data Science Data/NutritionR/R/calcount2.R', echo=TRUE)
calcount2("broccoli",10,"grams")
calcount2("bean",10,"grams")
library(NutritionR)
devtools::document()
version
devtools::document()
